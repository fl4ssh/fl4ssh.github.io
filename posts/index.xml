<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Engineering in the wild</title><link>https://fl4ssh.github.io/posts/</link><description>Recent content in Posts on Engineering in the wild</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 02 May 2023 15:00:08 +0600</lastBuildDate><atom:link href="https://fl4ssh.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Domain Modeling</title><link>https://fl4ssh.github.io/posts/domain-modeling/</link><pubDate>Tue, 02 May 2023 15:00:08 +0600</pubDate><guid>https://fl4ssh.github.io/posts/domain-modeling/</guid><description>Domain modeling Domain model is another term to describe business logic layer. It is a central layer of a three-layered architecture (Presentation -&amp;gt; Business -&amp;gt; Database). It is the part of the code that is likely to change and delivers the most value to the business. It is important to make it understandable and easy to modify.
The domain is a fancy way of saying the problem you&amp;rsquo;re trying to solve.</description><content>&lt;h1 id="domain-modeling">Domain modeling&lt;/h1>
&lt;p>Domain model is another term to describe business logic layer. It is a central layer of a three-layered architecture (Presentation -&amp;gt; Business -&amp;gt; Database). It is the part of the code that is likely to change and delivers the most value to the business. It is important to make it understandable and easy to modify.&lt;/p>
&lt;p>The &lt;em>domain&lt;/em> is a fancy way of saying the problem you&amp;rsquo;re trying to solve.
A &lt;em>model&lt;/em> is a map of a process or phenomenon that captures a useful property.
Steps to develop domain model:&lt;/p>
&lt;ul>
&lt;li>initial conversation with business experts&lt;/li>
&lt;li>agree on glossary&lt;/li>
&lt;li>set some rules for the first minimal version of the domain model&lt;/li>
&lt;li>wherever possible, concrete examples should be given for a rule&lt;/li>
&lt;/ul>
&lt;p>To model a domain, two concepts can be used:&lt;/p>
&lt;ul>
&lt;li>value object&lt;/li>
&lt;li>entity.&lt;/li>
&lt;/ul>
&lt;p>Value objects are used to represent concepts or values within the domain, while entities are used to represent objects with unique identities that are relevant to the domain. By using these constructs effectively, we can create models that accurately reflect the business rules and concepts of the domain.&lt;/p>
&lt;p>Example of a value object is &lt;code>EmailAddress&lt;/code>. It&amp;rsquo;s immutable and its identity is represented by its state. Example of an entity is &lt;code>User&lt;/code> which can have attributes (or value objects) such as name, email address, password, etc. Its state may change over time, but its identity remains the same (e.g. ID).&lt;/p></content></item><item><title>Dependency Inversion Principle</title><link>https://fl4ssh.github.io/posts/dependency-inversion-principle/</link><pubDate>Tue, 02 May 2023 10:37:34 +0600</pubDate><guid>https://fl4ssh.github.io/posts/dependency-inversion-principle/</guid><description>Dependency Inversion Principle Dependency Inversion Principle (or DIP) is one of SOLID principles and methodology to avoid highly coupled distribution and increase the re-usability of layer.
It is different from Dependency Injection, which is used to provide dependency to an application class / layer. Whereas DIP is used to invert the responsibility of flow control in an application.
Formal definitions of DIP:
High-level modules should not depend on low-level modules. Both should depend on abstractions.</description><content>&lt;h1 id="dependency-inversion-principle">Dependency Inversion Principle&lt;/h1>
&lt;p>Dependency Inversion Principle (or DIP) is one of SOLID principles and methodology to avoid highly coupled distribution and increase the re-usability of layer.&lt;/p>
&lt;p>It is different from Dependency Injection, which is used to provide dependency to an application class / layer. Whereas DIP is used to invert the responsibility of flow control in an application.&lt;/p>
&lt;p>Formal definitions of DIP:&lt;/p>
&lt;ul>
&lt;li>High-level modules should not depend on low-level modules. Both should depend on abstractions.&lt;/li>
&lt;li>Abstractions should not depend on details. Instead, details should depend on abstractions.&lt;/li>
&lt;/ul>
&lt;p>Implementing DIP makes your code more flexible, maintainable, and easier to test. It is achieved by decoupling the components of your application by implementing DIP.&lt;/p>
&lt;p>Example of DIP:&lt;/p>
&lt;pre tabindex="0">&lt;code>type Repository interface {
GetData(id int) ([]byte, error)
}
type Service struct {
repo Repository
}
func (s *Service) ProcessDataByID(id int) error {
data, err := s.repo.GetData(id)
if err != nil {
return err
}
// process data
return nil
}
&lt;/code>&lt;/pre>&lt;p>In this example, we see that the service that processes data by ID is not limited by specific repository implementation, e.g. SQL database, or NoSQL database. All it knows is that it should obtain a data or an error from database. And it is sufficient to work without any issues.&lt;/p>
&lt;p>So DIP is implemented by an abstraction in the face of interfaces in Golang. Let&amp;rsquo;s consider the case that doesn&amp;rsquo;t follow DIP principle:&lt;/p>
&lt;pre tabindex="0">&lt;code>type Repository struct {
db *sql.Conn
}
func (r *Repository) GetData(id int) ([]data, error) {
// do transaction or simple query to retrieve data
rows, err := r.Query(&amp;#34;SELECT * FROM table&amp;#34;)
if err != nil {
return nil, error
}
// process rows to obtain data, etc...
return data, nil
}
type Service struct {
repo *Repository
}
func (s *Service) ProcessDataByID(id int) error {
data, err := s.repo.GetData(id)
if err != nil {
return err
}
// process data
return nil
}
&lt;/code>&lt;/pre>&lt;p>In this code example, we see that &lt;code>Service&lt;/code> struct directly depends on &lt;code>Repository&lt;/code>. To test this code, you will need specific implementation of &lt;code>Repository&lt;/code> structure and initialize a connection to a database. This creates unnecessary complexities.&lt;/p></content></item><item><title>Starting Competitive Programming</title><link>https://fl4ssh.github.io/posts/starting-competitive-programming/</link><pubDate>Thu, 11 Aug 2022 11:24:44 +0600</pubDate><guid>https://fl4ssh.github.io/posts/starting-competitive-programming/</guid><description>What is a competitive programming? Competitive programming is a digital sport where the goal is to solve different challenges (in math, logical, logistic, etc. domains) using a programming language in a restricted amount of computational time and space. People can participate competition alone or in a team. Example of a competitive programming challenge:
Given an integer n, return a string array answer (1-indexed) where: - answer[i] == &amp;#34;FizzBuzz&amp;#34; if i is divisible by 3 and 5.</description><content>&lt;h1 id="what-is-a-competitive-programming">What is a competitive programming?&lt;/h1>
&lt;p>Competitive programming is a digital sport where the goal is to solve different challenges (in math, logical, logistic, etc. domains) using a programming language in a restricted amount of computational time and space. People can participate competition alone or in a team. Example of a competitive programming challenge:&lt;/p>
&lt;pre tabindex="0">&lt;code>Given an integer n, return a string array answer (1-indexed) where:
- answer[i] == &amp;#34;FizzBuzz&amp;#34; if i is divisible by 3 and 5.
- answer[i] == &amp;#34;Fizz&amp;#34; if i is divisible by 3.
- answer[i] == &amp;#34;Buzz&amp;#34; if i is divisible by 5.
- answer[i] == i (as a string) if none of the above conditions are true.
&lt;/code>&lt;/pre>&lt;p>That is very simple and beginner level task that requires a knowledge of &lt;code>if, else if, else&lt;/code> conditional statements.&lt;/p>
&lt;h1 id="why-should-someone-consideru-participating-in-competitive-programming">Why should someone consideru participating in competitive programming?&lt;/h1>
&lt;p>For the programming beginners it is a good start to learn a programming language. At the start, it could get very tedious to cram theory of a language. It would be more effective to practice and apply obtained knowledge by solving some tasks. Moreover, the beginners will discover basic data structures and algorithms that are essential for learning more complex subjects.&lt;/p>
&lt;p>Programmers with some experience in coding will learn finding more optimal solution rather than brute-force, which runs faster and consumes less memory. Also, it is important to compare different solution. In this way programmers obtain code review skills that are essential for growth.&lt;/p>
&lt;p>Another reason to do competitive programming is that it helps to prepare for the technical interviews. FAANG (Facebook, Apple, Amazon, Netflix, Google) and other big tech companies expect their candidates to be good at solving the coding tasks. Solving a challenge is not the only criteria that they consider, but it is definitely part of the hiring decision.&lt;/p>
&lt;p>Finally, it is just fun thing to do. Programmers form teams, partnership and friendship during competitions. It is a great opportunity to communicate, learn and share ideas with other people who share the same interests in finding a perfect solution.&lt;/p>
&lt;h1 id="how-should-someone-start-their-journey">How should someone start their journey?&lt;/h1>
&lt;p>There are many different options, but my favourites are:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://interviews.school">Interviews school&lt;/a>: top-1 website to start from the basics of data structures and algorithms. The content are split very concisely to chapters, and each chapter has explanation of a topic, examples of code, and some tasks (with hints) for consolidation of covered materials. Finally, it is totally FREE!&lt;/li>
&lt;li>&lt;a href="https://codewars.com">Codewars&lt;/a>: another free-of-charge website to start. They introduce the learning system similar to teaching methods of east martial arts. Participant is a new learner that enters tatami of training hall and needs to do exercizes (called Kata) and attend sparring (called Kumite) to earn the status of a brave warrior.&lt;/li>
&lt;li>&lt;a href="https://algoexpert.io">Algoexpert&lt;/a>: platform that has different types of challenges grouped by topics. Each challenge has a solution and video with explanation. Furthermore, it has other topics essential for the programming interviews, such as System Design, Machine Learning, etc. The prices vary from $39 to $81 dollars per year. I think that is a good investment that you can make.&lt;/li>
&lt;li>&lt;a href="https://leetcode.com">Leetcode&lt;/a>: the best platform that has very large number of coding challenges. There are learning materials, video solutions, community that shares their solutions / comments / ideas. Subscribers can also attend a weekly and biweekly competitions (also called contests) where they can earn leetcoins. This coins can be exchanged to some valuable prices, such as free monthly premium subscription, t-shirts, laptop sleeve and original Leetcode &amp;lsquo;Big O&amp;rsquo; notebook. It has different subscription plan, but most of the content is available for free.&lt;/li>
&lt;/ul></content></item></channel></rss>